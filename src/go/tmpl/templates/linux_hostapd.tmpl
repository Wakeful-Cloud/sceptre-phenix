###############################################################################
#                                                                             #
#                 ██████╗ ██╗  ██╗███████╗███╗  ██╗██╗██╗  ██╗                #
#                 ██╔══██╗██║  ██║██╔════╝████╗ ██║██║╚██╗██╔╝                #
#                 ██████╔╝███████║█████╗  ██╔██╗██║██║ ╚███╔╝                 #
#                 ██╔═══╝ ██╔══██║██╔══╝  ██║╚████║██║ ██╔██╗                 #
#                 ██║     ██║  ██║███████╗██║ ╚███║██║██╔╝╚██╗                #
#                 ╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚══╝╚═╝╚═╝  ╚═╝                #
#                                                                             #
#                                                                             #
###############################################################################
# File: hostapd configuration
# From: https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf?h=hostap_2_11&id=d945ddd368085f255e68328f2d3b020ceea359af
###############################################################################

##### hostapd configuration file ##############################################
# Empty lines and lines starting with # are ignored

# AP netdevice name (without 'ap' postfix, i.e., wlan0 uses wlan0ap for
# management frames with the Host AP driver); wlan0 with many nl80211 drivers
# Note: This attribute can be overridden by the values supplied with the '-i'
# command line parameter.
interface={{ .Name }}

# Driver interface type (hostap/wired/none/nl80211/bsd);
# default: hostap). nl80211 is used with all Linux mac80211 drivers.
# Use driver=none if building hostapd as a standalone RADIUS server that does
# not control any wireless/wired driver.
driver=nl80211

##### IEEE 802.11 related configuration #######################################

# SSID to be used in IEEE 802.11 management frames
ssid2="{{ .Wifi.SSID }}"

# Operation mode (a = IEEE 802.11a (5 GHz), b = IEEE 802.11b (2.4 GHz),
# g = IEEE 802.11g (2.4 GHz), ad = IEEE 802.11ad (60 GHz); a/g options are used
# with IEEE 802.11n (HT), too, to specify band). For IEEE 802.11ac (VHT), this
# needs to be set to hw_mode=a. For IEEE 802.11ax (HE) on 6 GHz this needs
# to be set to hw_mode=a. When using ACS (see channel parameter), a
# special value "any" can be used to indicate that any support band can be used.
# This special case is currently supported only with drivers with which
# offloaded ACS is used.
# Default: IEEE 802.11b
{{ if and .Wifi .Wifi.AP -}}
{{ if contains .Wifi.AP.Generation (list "1") }}
hw_mode=b
{{ else if contains .Wifi.AP.Generation (list "2" "5" "6" "6e" "7") }}
hw_mode=a
{{ else if contains .Wifi.AP.Generation (list "3") }}
hw_mode=g
{{ else if contains .Wifi.AP.Generation (list "4") }}
hw_mode=g
{{ else }}
# hw_mode=g
{{ end }}
{{- end }}

# IEEE 802.11 specifies two authentication algorithms. hostapd can be
# configured to allow both of these or only one. Open system authentication
# should be used with IEEE 802.1X.
# Bit fields of allowed authentication algorithms:
# bit 0 = Open System Authentication
# bit 1 = Shared Key Authentication (requires WEP)
# auth_algs=3
{{ if eq .Wifi.Auth.Mode "wep" }}
auth_algs=2
{{ else if contains .Wifi.Auth.Mode (list "wpa-personal" "wpa2-personal" "wpa3-personal" "wpa-enterprise" "wpa2-enterprise" "wpa3-enterprise") }}
auth_algs=1
{{ else }}
auth_algs=3
{{ end }}

# Send empty SSID in beacons and ignore probe request frames that do not
# specify full SSID, i.e., require stations to know SSID.
# default: disabled (0)
# 1 = send empty (length=0) SSID in beacon and ignore probe request for
#     broadcast SSID
# 2 = clear SSID (ASCII 0), but keep the original length (this may be required
#     with some clients that do not support empty SSID) and ignore probe
#     requests for broadcast SSID
{{ if .Wifi.Hidden }}
ignore_broadcast_ssid=1
{{ else }}
ignore_broadcast_ssid=0
{{ end }}

# Static WEP key configuration
#
# The key number to use when transmitting.
# It must be between 0 and 3, and the corresponding key must be set.
# default: not set
# The WEP keys to use.
# A key may be a quoted string or unquoted hexadecimal digits.
# The key length should be 5, 13, or 16 characters, or 10, 26, or 32
# digits, depending on whether 40-bit (64-bit), 104-bit (128-bit), or
# 128-bit (152-bit) WEP is used.
# Only the default key must be supplied; the others are optional.
# default: not set
{{ if eq .Wifi.Auth.Mode "wep" }}
wep_default_key=0
{{ if ne .Wifi.Auth.HexPassword "" }}
wep_key0={{ .Wifi.Auth.HexPassword }}
{{ else if ne .Wifi.Auth.AsciiPassword "" }}
wep_key0="{{ .Wifi.Auth.AsciiPassword }}"
{{ else }}
#wep_key0=123456789a
#wep_key1="vwxyz"
#wep_key2=0102030405060708090a0b0c0d
#wep_key3=".2.4.6.8.0.23"
{{ end }}
{{ end }}

##### WPA/IEEE 802.11i configuration ##########################################

# Enable WPA. Setting this variable configures the AP to require WPA (either
# WPA-PSK or WPA-RADIUS/EAP based on other configuration). For WPA-PSK, either
# wpa_psk or wpa_passphrase must be set and wpa_key_mgmt must include WPA-PSK.
# Instead of wpa_psk / wpa_passphrase, wpa_psk_radius might suffice.
# For WPA-RADIUS/EAP, ieee8021x must be set (but without dynamic WEP keys),
# RADIUS authentication server must be configured, and WPA-EAP must be included
# in wpa_key_mgmt.
# This field is a bit field that can be used to enable WPA (IEEE 802.11i/D3.0)
# and/or WPA2 (full IEEE 802.11i/RSN):
# bit0 = WPA
# bit1 = IEEE 802.11i/RSN (WPA2) (dot11RSNAEnabled)
# Note that WPA3 is also configured with bit1 since it uses RSN just like WPA2.
# In other words, for WPA3, wpa=2 is used the configuration (and
# wpa_key_mgmt=SAE for WPA3-Personal instead of wpa_key_mgmt=WPA-PSK).
{{ if contains .Wifi.Auth.Mode (list "wpa-personal" "wpa-enterprise") }}
wpa=0
{{ else if contains .Wifi.Auth.Mode (list "wpa2-personal" "wpa3-personal" "wpa2-enterprise" "wpa3-enterprise") }}
wpa=2
{{ else }}
#wpa=2
{{ end }}

# WPA pre-shared keys for WPA-PSK. This can be either entered as a 256-bit
# secret in hex format (64 hex digits), wpa_psk, or as an ASCII passphrase
# (8..63 characters) that will be converted to PSK. This conversion uses SSID
# so the PSK changes when ASCII passphrase is used and the SSID is changed.
# wpa_psk (dot11RSNAConfigPSKValue)
# wpa_passphrase (dot11RSNAConfigPSKPassPhrase)
{{ if contains .Wifi.Auth.Mode (list "wpa-personal" "wpa2-personal" "wpa3-personal" "wpa-enterprise" "wpa2-enterprise" "wpa3-enterprise") }}
{{ if ne .Wifi.Auth.HexPassword "" }}
wpa_psk={{ .Wifi.Auth.HexPassword }}
{{ else if ne .Wifi.Auth.AsciiPassword "" }}
wpa_passphrase={{ .Wifi.Auth.AsciiPassword }}
{{ else }}
#wpa_psk=0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
#wpa_passphrase=secret passphrase
{{ end }}
{{ end }}

# Set of accepted key management algorithms (WPA-PSK, WPA-EAP, or both). The
# entries are separated with a space. WPA-PSK-SHA256 and WPA-EAP-SHA256 can be
# added to enable SHA256-based stronger algorithms.
# WPA-PSK = WPA-Personal / WPA2-Personal
# WPA-PSK-SHA256 = WPA2-Personal using SHA256
# WPA-EAP = WPA-Enterprise / WPA2-Enterprise
# WPA-EAP-SHA256 = WPA2-Enterprise using SHA256
# SAE = SAE (WPA3-Personal)
# WPA-EAP-SUITE-B-192 = WPA3-Enterprise with 192-bit security/CNSA suite
# FT-PSK = FT with passphrase/PSK
# FT-EAP = FT with EAP
# FT-EAP-SHA384 = FT with EAP using SHA384
# FT-SAE = FT with SAE
# FILS-SHA256 = Fast Initial Link Setup with SHA256
# FILS-SHA384 = Fast Initial Link Setup with SHA384
# FT-FILS-SHA256 = FT and Fast Initial Link Setup with SHA256
# FT-FILS-SHA384 = FT and Fast Initial Link Setup with SHA384
# OWE = Opportunistic Wireless Encryption (a.k.a. Enhanced Open)
# DPP = Device Provisioning Protocol
# OSEN = Hotspot 2.0 online signup with encryption
# (dot11RSNAConfigAuthenticationSuitesTable)
{{ if contains .Wifi.Auth.Mode (list "wpa-personal" "wpa2-personal") }}
wpa_key_mgmt=WPA-PSK
{{ else if contains .Wifi.Auth.Mode (list "wpa3-personal") }}
wpa_key_mgmt=SAE
{{ else if contains .Wifi.Auth.Mode (list "wpa-enterprise" "wpa2-enterprise") }}
wpa_key_mgmt=WPA-EAP
{{ else if contains .Wifi.Auth.Mode (list "wpa3-enterprise") }}
wpa_key_mgmt=WPA-EAP-SUITE-B-192
{{ else }}
#wpa_key_mgmt=WPA-PSK WPA-EAP
{{ end }}

##### Integrated EAP server ###################################################

# Optionally, hostapd can be configured to use an integrated EAP server
# to process EAP authentication locally without need for an external RADIUS
# server. This functionality can be used both as a local authentication server
# for IEEE 802.1X/EAPOL and as a RADIUS server for other devices.

# Use integrated EAP server instead of external RADIUS authentication
# server. This is also needed if hostapd is configured to act as a RADIUS
# authentication server.
{{ if contains .Wifi.Auth.Mode (list "wpa-enterprise" "wpa2-enterprise" "wpa3-enterprise") }}
eap_server=1
{{ else }}
#eap_server=0
{{ end }}

# Path for EAP server user database
# If SQLite support is included, this can be set to "sqlite:/path/to/sqlite.db"
# to use SQLite database instead of a text file.
{{ if contains .Wifi.Auth.Mode (list "wpa-enterprise" "wpa2-enterprise" "wpa3-enterprise") }}
eap_user_file=/etc/hostapd/{{ .Name }}-eap_user
{{ else }}
#eap_user_file=/etc/hostapd.eap_user
{{ end }}

# CA certificate (PEM or DER file) for EAP-TLS/PEAP/TTLS
{{ if ne .Wifi.Auth.CaCertificate "" }}
ca_cert=/etc/hostapd/{{ .Name }}-ca.cert
{{ else }}
#ca_cert=/etc/hostapd.ca.pem
{{ end }}

# Server certificate (PEM or DER file) for EAP-TLS/PEAP/TTLS
{{ if ne .Wifi.Auth.Certificate "" }}
server_cert=/etc/hostapd/{{ .Name }}-cert.cert
{{ else }}
#server_cert=/etc/hostapd.server.pem
{{ end }}

# Private key matching with the server certificate for EAP-TLS/PEAP/TTLS
# This may point to the same file as server_cert if both certificate and key
# are included in a single file. PKCS#12 (PFX) file (.p12/.pfx) can also be
# used by commenting out server_cert and specifying the PFX file as the
# private_key.
{{ if ne .Wifi.Auth.Key "" }}
private_key=/etc/hostapd/{{ .Name }}-key.key
{{ else }}
#private_key=/etc/hostapd.server.prv
{{ end }}

# Passphrase for private key
{{ if ne .Wifi.Auth.KeyPassword "" }}
private_key_passwd={{ .Wifi.Auth.KeyPassword }}
{{ else }}
#private_key_passwd=secret passphrase
{{ end }}

# Server identity
# EAP methods that provide mechanism for authenticated server identity delivery
# use this value. If not set, "hostapd" is used as a default.
{{ if ne .Wifi.Auth.Identity "" }}
server_id={{ .Wifi.Auth.Identity }}
{{ else }}
#server_id=server.example.com
{{ end }}

{{ if and .Wifi .Wifi.AP -}}
{{ if eq .Wifi.AP.Generation "4" }}
##### IEEE 802.11n related configuration ######################################

# ieee80211n: Whether IEEE 802.11n (HT) is enabled
# 0 = disabled (default)
# 1 = enabled
# Note: You will also need to enable WMM for full HT functionality.
# Note: hw_mode=g (2.4 GHz) and hw_mode=a (5 GHz) is used to specify the band.
ieee80211n=1
{{ else if eq .Wifi.AP.Generation "5" }}
##### IEEE 802.11ac related configuration #####################################

# ieee80211ac: Whether IEEE 802.11ac (VHT) is enabled
# 0 = disabled (default)
# 1 = enabled
# Note: You will also need to enable WMM for full VHT functionality.
# Note: hw_mode=a is used to specify that 5 GHz band is used with VHT.
ieee80211ac=1
{{ else if contains .Wifi.AP.Generation (list "6" "6e") }}
##### IEEE 802.11ax related configuration #####################################

#ieee80211ax: Whether IEEE 802.11ax (HE) is enabled
# 0 = disabled (default)
# 1 = enabled
ieee80211ax=1
{{ else if eq .Wifi.AP.Generation "7" }}
##### IEEE 802.11be related configuration #####################################

#ieee80211be: Whether IEEE 802.11be (EHT) is enabled
# 0 = disabled (default)
# 1 = enabled
ieee80211be=1
{{ end }}
{{- end }}

##### IEEE 802.1X-2004 related configuration ##################################

# Require IEEE 802.1X authorization
{{ if contains .Wifi.Auth.Mode (list "wpa-enterprise" "wpa2-enterprise" "wpa3-enterprise") }}
ieee8021x=1
{{ else }}
#ieee8021x=1
{{ end }}

##### Extra configuration #####################################################
{{ range $index, $item := .Wifi.Extra }}
# Key: {{ $item.key }}
# Value: {{ default $item.value "not set" }}
# File: {{ default $item.file "not set" }}
{{ if ne $item.File "" }}
{{ $item.Key }}=/etc/hostapd/{{ .Name }}-extra-{{ $index }}
{{ else }}
{{ $item.Key }}={{ $item.Value }}
{{ end }}
{{ end }}
